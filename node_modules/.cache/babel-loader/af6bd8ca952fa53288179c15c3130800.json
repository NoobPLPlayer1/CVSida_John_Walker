{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programming\\\\CV\\\\CVSida_John_Walker\\\\src\\\\components\\\\GithubProjects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GithubProjects = () => {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    const getProjects = async () => {\n      const response = await fetch('https://api.github.com/users/NoobPLPlayer1/repos');\n      const json = await response.json();\n      setProjects(json);\n    };\n\n    getProjects();\n    alert(k);\n  }, []);\n  var k = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid_item\",\n    children: projects.map(item => {\n      const {\n        id,\n        name\n      } = item;\n      k = k + 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, `${k}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProjects, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n\n_c = GithubProjects;\nexport default GithubProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProjects\");","map":{"version":3,"sources":["C:/Programming/CV/CVSida_John_Walker/src/components/GithubProjects.js"],"names":["React","useState","useEffect","GithubProjects","projects","setProjects","getProjects","response","fetch","json","alert","k","map","item","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMI,WAAW,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAJ,MAAAA,WAAW,CAACI,IAAD,CAAX;AACH,KAJD;;AAKAH,IAAAA,WAAW;AACXI,IAAAA,KAAK,CAACC,CAAD,CAAL;AACH,GARQ,EAQN,EARM,CAAT;AASA,MAAIA,CAAC,GAAG,CAAR;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKP,QAAQ,CAACQ,GAAT,CAAcC,IAAD,IAAU;AACpB,YAAM;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL,UAAaF,IAAnB;AACAF,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAA,oBAAK,GAAEI,IAAK;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ,SAA2B,GAAEJ,CAAE,EAA/B;AAAA;AAAA;AAAA;AAAA,cADJ;AAIC,KAPJ;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAYH,CAzBD;;GAAMR,c;;KAAAA,c;AA2BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst GithubProjects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getProjects = async () => {\r\n            const response = await fetch('https://api.github.com/users/NoobPLPlayer1/repos');\r\n            const json = await response.json();\r\n            setProjects(json);\r\n        }\r\n        getProjects();\r\n        alert(k);\r\n    }, [])\r\n    var k = 0;\r\n    return (\r\n    <div className=\"grid_item\">\r\n        {projects.map((item) => {\r\n            const {id, name} = item; \r\n            k = k + 1;\r\n            return (\r\n                <div className=\"box\" key={`${k}`}>\r\n                    <p>{`${name}`}</p>\r\n                </div>); \r\n            })}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default GithubProjects"]},"metadata":{},"sourceType":"module"}